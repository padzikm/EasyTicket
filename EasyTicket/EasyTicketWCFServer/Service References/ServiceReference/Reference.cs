//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/EasyTicketLogic")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Server.ServiceReference.UserPreferences PreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Server.ServiceReference.UserPreferences Preferences {
            get {
                return this.PreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferencesField, value) != true)) {
                    this.PreferencesField = value;
                    this.RaisePropertyChanged("Preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPreferences", Namespace="http://schemas.datacontract.org/2004/07/EasyTicketLogic")]
    [System.SerializableAttribute()]
    public partial class UserPreferences : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Server.ServiceReference.Address ArrivalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComfortClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Server.ServiceReference.Address DepartureAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DepartureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfAdultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfInfantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreferDirectedRoutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserPreferencesIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Server.ServiceReference.Address ArrivalAddress {
            get {
                return this.ArrivalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivalAddressField, value) != true)) {
                    this.ArrivalAddressField = value;
                    this.RaisePropertyChanged("ArrivalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivalDate {
            get {
                return this.ArrivalDateField;
            }
            set {
                if ((this.ArrivalDateField.Equals(value) != true)) {
                    this.ArrivalDateField = value;
                    this.RaisePropertyChanged("ArrivalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComfortClass {
            get {
                return this.ComfortClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ComfortClassField, value) != true)) {
                    this.ComfortClassField = value;
                    this.RaisePropertyChanged("ComfortClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Server.ServiceReference.Address DepartureAddress {
            get {
                return this.DepartureAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartureAddressField, value) != true)) {
                    this.DepartureAddressField = value;
                    this.RaisePropertyChanged("DepartureAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DepartureDate {
            get {
                return this.DepartureDateField;
            }
            set {
                if ((this.DepartureDateField.Equals(value) != true)) {
                    this.DepartureDateField = value;
                    this.RaisePropertyChanged("DepartureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfAdults {
            get {
                return this.NumberOfAdultsField;
            }
            set {
                if ((this.NumberOfAdultsField.Equals(value) != true)) {
                    this.NumberOfAdultsField = value;
                    this.RaisePropertyChanged("NumberOfAdults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfChildren {
            get {
                return this.NumberOfChildrenField;
            }
            set {
                if ((this.NumberOfChildrenField.Equals(value) != true)) {
                    this.NumberOfChildrenField = value;
                    this.RaisePropertyChanged("NumberOfChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfInfants {
            get {
                return this.NumberOfInfantsField;
            }
            set {
                if ((this.NumberOfInfantsField.Equals(value) != true)) {
                    this.NumberOfInfantsField = value;
                    this.RaisePropertyChanged("NumberOfInfants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreferDirectedRoutes {
            get {
                return this.PreferDirectedRoutesField;
            }
            set {
                if ((this.PreferDirectedRoutesField.Equals(value) != true)) {
                    this.PreferDirectedRoutesField = value;
                    this.RaisePropertyChanged("PreferDirectedRoutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserPreferencesId {
            get {
                return this.UserPreferencesIdField;
            }
            set {
                if ((this.UserPreferencesIdField.Equals(value) != true)) {
                    this.UserPreferencesIdField = value;
                    this.RaisePropertyChanged("UserPreferencesId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/EasyTicketLogic")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DBahnPlaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkyScannerPlaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryRegion {
            get {
                return this.CountryRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryRegionField, value) != true)) {
                    this.CountryRegionField = value;
                    this.RaisePropertyChanged("CountryRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DBahnPlaceId {
            get {
                return this.DBahnPlaceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DBahnPlaceIdField, value) != true)) {
                    this.DBahnPlaceIdField = value;
                    this.RaisePropertyChanged("DBahnPlaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlatNumber {
            get {
                return this.FlatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FlatNumberField, value) != true)) {
                    this.FlatNumberField = value;
                    this.RaisePropertyChanged("FlatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkyScannerPlaceId {
            get {
                return this.SkyScannerPlaceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SkyScannerPlaceIdField, value) != true)) {
                    this.SkyScannerPlaceIdField = value;
                    this.RaisePropertyChanged("SkyScannerPlaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckNewOffer", ReplyAction="http://tempuri.org/IService/CheckNewOfferResponse")]
        bool CheckNewOffer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckNewOffer", ReplyAction="http://tempuri.org/IService/CheckNewOfferResponse")]
        System.Threading.Tasks.Task<bool> CheckNewOfferAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMailToAll", ReplyAction="http://tempuri.org/IService/SendMailToAllResponse")]
        void SendMailToAll(string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMailToAll", ReplyAction="http://tempuri.org/IService/SendMailToAllResponse")]
        System.Threading.Tasks.Task SendMailToAllAsync(string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisteredUsers", ReplyAction="http://tempuri.org/IService/RegisteredUsersResponse")]
        int RegisteredUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisteredUsers", ReplyAction="http://tempuri.org/IService/RegisteredUsersResponse")]
        System.Threading.Tasks.Task<int> RegisteredUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterPreferences", ReplyAction="http://tempuri.org/IService/RegisterPreferencesResponse")]
        void RegisterPreferences(Server.ServiceReference.User user, Server.ServiceReference.UserPreferences userPrefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterPreferences", ReplyAction="http://tempuri.org/IService/RegisterPreferencesResponse")]
        System.Threading.Tasks.Task RegisterPreferencesAsync(Server.ServiceReference.User user, Server.ServiceReference.UserPreferences userPrefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckOffers", ReplyAction="http://tempuri.org/IService/CheckOffersResponse")]
        void CheckOffers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckOffers", ReplyAction="http://tempuri.org/IService/CheckOffersResponse")]
        System.Threading.Tasks.Task CheckOffersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Server.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Server.ServiceReference.IService>, Server.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckNewOffer() {
            return base.Channel.CheckNewOffer();
        }
        
        public System.Threading.Tasks.Task<bool> CheckNewOfferAsync() {
            return base.Channel.CheckNewOfferAsync();
        }
        
        public void SendMailToAll(string body) {
            base.Channel.SendMailToAll(body);
        }
        
        public System.Threading.Tasks.Task SendMailToAllAsync(string body) {
            return base.Channel.SendMailToAllAsync(body);
        }
        
        public int RegisteredUsers() {
            return base.Channel.RegisteredUsers();
        }
        
        public System.Threading.Tasks.Task<int> RegisteredUsersAsync() {
            return base.Channel.RegisteredUsersAsync();
        }
        
        public void RegisterPreferences(Server.ServiceReference.User user, Server.ServiceReference.UserPreferences userPrefs) {
            base.Channel.RegisterPreferences(user, userPrefs);
        }
        
        public System.Threading.Tasks.Task RegisterPreferencesAsync(Server.ServiceReference.User user, Server.ServiceReference.UserPreferences userPrefs) {
            return base.Channel.RegisterPreferencesAsync(user, userPrefs);
        }
        
        public void CheckOffers() {
            base.Channel.CheckOffers();
        }
        
        public System.Threading.Tasks.Task CheckOffersAsync() {
            return base.Channel.CheckOffersAsync();
        }
    }
}
